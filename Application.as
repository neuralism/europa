package  {		import com.greensock.TweenMax;	import com.greensock.easing.*;	import flash.display.MovieClip;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.MouseEvent;	import flash.geom.Point;	import flash.events.Event;	import flashx.textLayout.elements.InlineGraphicElement;	public class Application extends MovieClip {		public var nav:Navigation = new Navigation();		public var home:Home = new Home();		public var structure:Structure = new Structure();		public var orrery:Orrery = new Orrery();				public var pageList:Array = [home, structure, orrery];		public var curPage:int = 0;		public var stars:Array = [];				public function Application() 		{			init();		}				public function begin(event:MouseEvent):void		{			init();			start_bg.removeEventListener(MouseEvent.CLICK, begin);			removeChild(start_bg);		}				public function init():void		{			centraliseVanishingPoint();									// Settings			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;						// Listeners			stage.addEventListener(Event.RESIZE, stageResize);						addStars();			// Childs			addChild(home);						addChild(nav);						home.transitIn();						// Executions			stageResize(null);			nav.update();		}				public function centraliseVanishingPoint():void		{			root.transform.perspectiveProjection.projectionCenter = new Point(stage.stageWidth / 2, stage.stageHeight / 2);		}				public function stageResize(event:Event):void		{			centraliseVanishingPoint();			nav.y = stage.stageHeight - nav.height - 30;			nav.x = 20;						pageList[curPage].x = (stage.stageWidth * 0.5) - (pageList[curPage].boundingArea.width * 0.5);			pageList[curPage].y = (stage.stageHeight * 0.5) - (pageList[curPage].boundingArea.height * 0.5);			pageList[curPage].resize();					}				public function addStars():void		{			for (var j:int = 0; j < 2000; j++)			{				var circle:MovieClip = new MovieClip();								circle.graphics.beginFill(0x666666);				circle.graphics.drawCircle(randomWidth(), randomHeight(), (Math.random() * 1) + 0.5);				circle.graphics.endFill();				circle.alpha = 0;								stars.push(circle);								TweenMax.to(circle, 0.1, { alpha: Math.random() * 1, ease: Expo.easeOut, delay: 0 });								addChild(circle);			}		}				public function randomWidth():Number		{			return Math.random() * 5000; //1680		}				public function randomHeight():Number		{			return Math.random() * 5000; //1050		}				public function loadPage(id:int):void		{						pageList[curPage].reset();			removeChild(pageList[curPage]);						addChild(pageList[id]);			pageList[id].reset();			pageList[id].transitIn();				curPage = id;			stageResize(null);			nav.update();			setChildIndex(nav, this.numChildren - 1);		}	}	}